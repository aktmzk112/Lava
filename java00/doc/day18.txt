#day18

----------------------------------------------------------------------------------------------------------------------------------
스레드 
	
	참고 ] 
		
		자바가 프로그램을 실행시키는 방법
			
			1.Processor를 이용 하는 방법
				==> 운영체제에서 의해서 자신이 사용할 메모리를 할당 받고
					레지스트리에 등록한 후 실행되는 방식
					
				단점 
					각각의 프로세스 프로그램은 원칙적으로 
					자신의 데이터를 다른 프로세스 프로금에게 주지 못한다.
					(메모리끼리 호환이 되지 않는다.)
					
				우리가 지금까지 실행한 모든 자바 프로그램은 프로세스를 이용한 방식이 된다.
				(==> 즉, main함수부터 시작하는 프로그램은 프로세스 방식을 실행하게 된다.)
				
					
			2.Thread를 이용하는 방법
				==> 독립적인 메모리를 할당받지 못하고 실행하는 프로그램이다.
					대신 프로세스 프로그램이 사용하는 메모리를 같이 공유하게 된다.
					
					참고 ]
						스레드는 혼자서는 실행되지 못한다.
						반드시 다른 프로세스가 실행이 된후 실행이 된다.
						
					장점 ] 
						스레드 프로그램은 메모리를 같이 사용하므로
						같은 메모리를 사용하는 프로그램끼리는 데이터 교환이 가능하다.
						
용어정리
	
	1. 시분할 시스템
		==> CPU는 한순간에는 오직 한개의 프로그램만 실행할 수 있다.
			하지만 여러개의 프로그램이 동시에 실행을 원한다면???
			한 순간에는 한개의 프로그램만 실행되고
			적당한 시간이 되면 그 프로그램을 보내고 
			다른 프로그램을 받아서 실행하도록 하고 있다.
			
			결론 ] 
				각각의 프로그램마다 CPU가 실행실 시간을 정한 후 
				그 시간만큼만 실행해준다.
				
	2. 우선순의(Priority)
		==> CPU는 시분할 시스템에 의해서 특정 프로그램을 자신이 분할한 시간만큼 실행한다.
			시간이 종료가 되면 다음 프로그램을 실행시켜야한다. 
			이때 CPU가 다음 프로그램을 선택하는 기준을 우리는 우선순위라 한다 .
			
			이말은 
			우선순위가 높은 프로그램이 CPU에 의해 먼저 실행된다는 개념이다.
			
-------------------------------------------------------------------------------------------------------------------
	자바에서 Thread 프로그램을 만드는 방법 
		1. Thread 클래스를 상속 받아서 만드는 방법
			1) 	Thread 클래스를 상속 받은 클래스를 제작한다
			2) 	그 클래스 안에 반드시 
					run() 함수를 
				오버라이드 해놓는다.
				( 이 함수가 프로세스 방식의 main() 함수에 해당하는 것으로 스레드 프로그램의 시작함수이다)
			3) run() 함수부터 출발하여 그 프로그램이 하고자 하는 일을 코딩하면 된다.
			
		2. Runnable 인터페이스를 구현해서 만드는 방법
		 	1) 	Runnable 인터페이스를 구현하는 클래스를 제작한다.
		 	2) 	그 클래스 안의 반드시
					run() 함수를
				오버라이드 해 놓는다
				( 이 함수가 프로세스 방식의 main() 함수에 해당하는 것으로 스레드 프로그램의 시작함수이다)
			3) run() 함수부터 출발해서 스 프로그햄이 하고자 하는 일을 코딩 하면 된다.
			
	참고 ]
		둘다 별 차이는 없지만 
		상속은 오직 한개만 받을 수 있고 (단일 상속)
		구현은 여러게를 동시에 할수 있다. (다중 상속)
		따라서 상속을 받아서 스레드 처리를 하게되는 순간 
		다른 클래스는 상속받을 수 없는 상태가 된다.
		따라서 다른 클래스를 필요로 하는 경우를 대비해서
		인터페이스 구현 방식도 제공 하고 있다.
		 
	참고 ]
		Runnable 상태 
			==>	CPU가 시분할 시스템에 의해서 프로그램을 선택할 때 
				선택 가능한 프로그램이 모여있는 상태
				
				**
				참고 
				CPU는 Runnable 상태에 있는 프로그램만 실행할 수 있다. 
				
			*****
			New Born 상태를 Runnable 상태로 전위시키는 명령
				
				start();
				
		참고 ] 
			실행함수가 run 함수이므로 
			직접 run() 를 호출하면 이것은 스레드 동작이 아니고
			프로새스에서 함수 하나를 호출한 효과가 된다.
			(병행 처리가 되지 않는다.)
			
		Run 상태 
			==> CPU가 특정 프로그램을 실제로 실행하는 상태를 말한다.
				Run 상태에는 오직 한개의 프로그램만 들어갈 수 있다.
				
				그리고 
					Runnable ----> Run 상태로 전위는 
				오직 운영체제가 해야할 몫이다 .
				(개발자가 직접 손댈수 없는 부분이다)
				
				참고 ] 
					Run---> Runnable 상태로 전위는 
						1.	운영체제 몫
								(시분할 시스템에 의해서 시간이 만료된 시점)
						2.	개발자가 직업 선택할 수 있다.
						
						
	참고 ]
		스레드 프로그램이 필요한 이유
			1. 독립적으로 실행이 필요한 경우 
				예 ] 
					서버프로그램에는
					각각의 클라이언트와 통신하는 프로그램이 독립적으로 실행되어야 한다.
					즉, 클라이언트와 통신은 다른 작업하고 별개로 독립접으로 실행되어야 한다.
					
			2.	백그라운드 작업이 필요한 경우 
					예]
						채팅 중 파일 없로드 하는경우 
						파일 업로드는 백그라운드에서 채팅작업과는 무관 하게 처리되어야 한다.
						
	스페드 프로그램을 동작시키는 방법
		1. Thread  상속 받은 경우
			1) new 시킨다 ==> New Born 상태
			2) start 시킨다 ==> Runnable 상태
			
		2. Runnable 인터페이스를 구현 한 경우
			1) new 시킨다 ==> 일반 클래스를 사용하기 위한 객체지향 방법 
			2) Thread 클래스를 new 시키면서  1)의 결과를 넣어 준다 
				==> 이 순간 New Born 상태가 된다 .
			3) 2)의 결과를 이용해서 start 시킨다.
				==> Runnable 상태로 전위한다.
	
	참고 ]
		==> 하나의 스레드 프로그램은 여러번 실행 할 수있다 .
			그러면 이들은 각각 독립적으로 실행된다.
			즉, 하나의 스레드처럼 여러게 프로그램이 실행되어진다.
			
			스레드의 부여된 이름....
			
			String name = Thread.currentThread().getName();
			
			으로 받아서 사용할 수 있다.

--------------------------------------------------------------------------------------------------------------------------------------------

	1. Run ---> Runnable 로 전위시키는 명령
		
		yield();
		
	참고 ]
		Block 상태란???
			실행을 종요하는 게 아니고 잠시 중단 한다는 말이다.
			Block 상태에 있는 프로그램은 절대 실행 되지 않는다
			(실행이 가능한 프로그램은 반드시 Runnable 에 있어야 한다)
			그리고 Block 상태에서 빠져나오는 방법
			오직 Runnable 상태로 전위 되는 방법 뿐이다.
			따라서 블럭 상태에서 직접 선택하여 실행항수는 없다
			
		2. Run -----> Block 생태로 전위 시키는 방법
			
			sleep(시간);			
			==> 시간을 정해주고 그시간이 되먄 자동적으로 Runnable 상태로 복귀 시키는 명령
			
------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------

상호참조  (클래스 통신)
	==> 일반적으로 프로그램을 제작하는 경우 
		하나의 클래스가 다른 클래스를 일반적으로 참조하는 방식으로 처리를 하는데 
		
		2개의 클래스가 서로 상태방의 멤버(변수,함수)를 사용할수있도록 하는 방법
		
	상호참조의 규칙]
		1. 먼저 실행되는 클래스에서는 다른 클래스를 new 시키면 된다.
		2. 나중에 실행되는 클래스는 먼저 실된 클래스를 new 시키면 안된다.
			(다시 new 시키면 새로운 Insance 가 생기므로...) 
			
		3. 대신 만들어진 클래스에 주소(this)를 받아서 그래도 기억하면된다.
		
		예]
			class Test1{
				public Test1(){
				}
			}
			 
			class Test2{
				Test1 main;
				
				putlic Test2(Test1 main){
					this.mina
				}
				
			}
							
						
							
---------------------------------------------------------------------------------------------------------------------------------------

File 
	==> 이것은 스트림은 아니다. (데이터를 입력, 출력하는 기능이 없다)
		다만 우리가 외부장치 중에서 가장 많이 사용하는 외부장치가 파일이다보니
		드 파일에 대한 정보를 처리하기 위한 클래스
		
	생성방법]
	 		
---------------------------------------------------------------------------------------------------------------------------------------
char 단위의 스트림 
==> 한번 입력출력 할 때 2바이트 단위로 입출력할 수 있는 스트림
	
	주의 ]
		기계어 상태의 내용은 절대로 char 단위 입출력을 사용하면 안된다.
		이것은 오직 텍스트 문서에 한해서만 사용해야 한다.
		

		
		
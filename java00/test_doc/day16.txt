#day 16

형식화 클래스
	==> 주로 처리된 결과를 보기 좋게 출력하기 위한 목적으로 사용되어지는 클래스
		
	1. DecimalFormat
		==> 처리결괴중 숫자를 보기 좋게 만들기위한 클래스
		
		생성방법 ] 
			DecimalFormat(String pattern) 을 주로 사용한다.
			==> 특정 형식을 지정해주고 만들어주는 방법 
			
		주요 함수 ] 
			format(double number)
			==> 숫자를 원하는 형태로 변환시켜주는 함수.
			
			참고 ] 
			
				패턴지정법 ] 
					
					0		- 한자리 숫자를 의미하고 무효숫자도 표시한다.
					#		- 한자리 숫자를 의미하고 무효숫자는 표시하지 않음
					.		- 소수의 우치
					- 		- 음수일 경우
					,		- 세자리마다 ','를 표시
					E		- 실수일 경우 지수 형태로 표시 
					: 		- 패턴을 구분
								(양수일 경우와 음수일 경울르 구분해서 처리할 경우 사용)
					%	   - 백분율 표시
					\u00A4 - 화폐단위를 표시하도록 한다.
					
					
=======================================================================================================================================

	2. SimpleDateFormat 
		==> 날짜데이터를 형식에 맞춰서 문자열로 만들어주는 클래스 
			
			생성방법과 주요함수는 위와 동일 
			
=======================================================================================================================================

	3. ChoiceFormat
		==> switch등을 이용해야 하는 경우에 
			이것을 간소화 시키기 위한 방식
			즉, 특정 범위의 값을 특정 문자열로 교체해서 출력하는 기능을 가진 클래스
			
		생성방법 ]
			ChoiceFormat(double[] limits, String[] formats) 
				
				double[] limits 	- 치환될 범위
				String[] formats 	- 치환할 문자 
				 
=======================================================================================================================================

	4. MessageFormat
		==> 특정 문자열의 특정 위치의 내용만 변경되는 경우 
			문자열 전체를 만들지 않고 변경되는 내용만 변화 시켜서 
			하나의 문자열을 만들어내는 클래스
			
			예 ] 
				emp 테이블에 INSERT 명령을 자바로 만드는 경우 
				
				"INSERT INTO emp VALUES(8000,'우현우','MANAGER',....,30)"
				"INSERT INTO emp VALUES(8001,'박광호','SALESMAN',....,30)"
				"INSERT INTO emp VALUES(8002,'박기윤','XXXX',....,30)"
				"INSERT INTO emp VALUES(8003,'최두용','XXXXX',....,30)"
				
				이런 문자열을 여러게 만들경우 처음부터 다시 만들어야 하는 불편함이 있다.
				이것을 해결하는 클래스가 MessageFormat 이라는 클래스 이다.
				
				참고함수 ] 
					
					parse(String source)
						==> 주어진 문자열 중에서 실제 변화되는 데이터 부분만 알아내는 함수

=======================================================================================================================================

 